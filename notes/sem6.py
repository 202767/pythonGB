# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены только по окружности.
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.
# n = int(input("Введите количество кустов на грядке: "))
# count = [int(i) for i in input("Введите через пробел кол-во ягод на"
#                                "каждом кусте: ").split()[:n]]
# print(max([count[i-2]+count[i-1]+count[i] for i in range(n)]))
# Задача 39. Даны два массива чисел. Требутся вывести те элементы первого массива
# (в том порядке, в каком они идут в первом массиве), которых нет во втором массиве.
# Пользователь вводит число N - количество элементов в перовм массиве, затем N чисел - элементы массива.
# Затем число M - количество элементов во втором массиве. Затем элементы второго массива.
# n = int(input("Введите кол-во элементов первого массива: "))
# list_n = [int(i) for i in input("Введите элемент первого массива: ").split[:n]]
# m = int(input("Введите кол-во элементов второго массива: "))
# list_m = [int(i) for i in input("Введите элемент второго массива: ").split[:m]]
# print([i for i in list_n if i not in list_m])
# Задача 41. Дан массив, состоящий из целых чисел. Напишите программу, которая в данном массиве выведет
# количество элементов, у которых два соседних и, при этом, оба соседних элемента меньше данного.
# Сначала вводится число N - количество элементов в массиве. Далее записаны N чисел - элемнты массива.
# Массив состоит из целых чисел
# n = int(input("Введите кол-во элементов в массиве: "))
# list_n = [int(i) for i in input("Введите элементы массива: ").split()[:n]]
# print(sum([list_n[i-1]<list_n[i]>list_n[i+1] for i in range(1, n-1)]))
# Задание 43. Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу.
# Считается, что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать.
# Вводится список чисел. Все числа списка находятся на разных строках.
# numbers = [int(i) for i in input("Введите числа: ").split()]
# count_numbers = {}
# for i in numbers:
#     if i not in count_numbers:
#         count_numbers[i] = 1
#     else:
#         count_numbers[i] += 1
# # print({i: i + 1 for i in range(5)})
# print(sum([i // 2 for i in count_numbers.values()]))
# Задача 45. Два различных натуральных числа n и m называются дружественными, если
# сумма делителей числа n (включая 1, но исключая само n) равна числу m и наоборот.
# Например, 220 и 284 - дружественные числа. По данному чисоу k выведите вс пары дружественных чисел,
# каждое из котрых не превосходит k. Программа получает на вход одно натуральное число k, не превосходящее 10^5.
# Программа должна вывести все пары дружственных чисел, каждое из которых не превосходит k.
# пары необходимо выводить по одной в строке, разделяя пробелами. Каждая пара должна быть выведена только один раз
# (перестановка чисел новую пару не дает).
n = int(input("Input number: "))
data = {}
for i in range(n+1):
    summa = 1
    for j in range(2, i//2+1):
        if i % j == 0:
            summa += j
    data[i] = summa
print_list = list()
for k, v in data.items():
    if v in data.keys() and k in data.values() and k != v and data[v] == k and data[k] == v and (k, v) not in print_list:
        print(k, v)
        print(list.append((v, k)))
